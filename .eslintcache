[{"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\App.js":"1","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\index.js":"2","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\canvasField\\CanvasField.js":"4","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\figuresField\\FiguresField.js":"5","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\importExportFile\\ImportExport.js":"6"},{"size":1189,"mtime":1608554435060,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1608112373505,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608112373505,"results":"10","hashOfConfig":"8"},{"size":5637,"mtime":1608554494845,"results":"11","hashOfConfig":"8"},{"size":603,"mtime":1608554501255,"results":"12","hashOfConfig":"8"},{"size":1430,"mtime":1608554507723,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"43d7c7",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\App.js",[],"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\index.js",[],"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\canvasField\\CanvasField.js",["27","28"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const CanvasField = (props) => {\r\n  const { selectedFigure, setSelectedFigure, figures, setFigures } = props;\r\n\r\n  const figuresList = {\r\n    circle: {\r\n      color: \"red\",\r\n      borderRadius: \"50%\",\r\n      width: 60,\r\n      height: 60,\r\n      border: \"1px solid black\",\r\n    },\r\n    rectangle: {\r\n      color: \"blueviolet\",\r\n      borderRadius: \"0%\",\r\n      width: 90,\r\n      height: 50,\r\n      border: \"1px solid black\",\r\n    },\r\n  };\r\n\r\n  //const [figures, setFigures] = useState([]);\r\n  const [idFigure, setIdFigure] = useState(0);\r\n  const [zIndex, setZIndex] = useState(0);\r\n  const [canvasCoordinates, setCanvasCoordinates] = useState();\r\n\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    const newCanvasCoordinates = ref.current.getBoundingClientRect();\r\n    setCanvasCoordinates(newCanvasCoordinates);\r\n    setFigures(JSON.parse(localStorage.getItem(\"figures\")));\r\n    setIdFigure(JSON.parse(localStorage.getItem(\"idFigure\")));\r\n    setZIndex(JSON.parse(localStorage.getItem(\"zIndex\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"figures\", JSON.stringify(figures));\r\n    localStorage.setItem(\"idFigure\", JSON.stringify(idFigure));\r\n    localStorage.setItem(\"zIndex\", JSON.stringify(zIndex));\r\n  }, [figures, idFigure, zIndex]);\r\n\r\n  const getStyleForFigure = (dataFigure, index) => {\r\n    let { pageX, pageY, type, zIndex } = dataFigure;\r\n    const figure = figuresList[type];\r\n\r\n    if (pageX < canvasCoordinates.x) pageX = canvasCoordinates.x;\r\n    if (pageY < canvasCoordinates.y) {\r\n      pageY = canvasCoordinates.y;\r\n    }\r\n    if (pageX + figure.width > canvasCoordinates.x + canvasCoordinates.width) {\r\n      pageX = canvasCoordinates.x + canvasCoordinates.width - figure.width;\r\n    }\r\n    if (\r\n      pageY + figure.height >\r\n      canvasCoordinates.y + canvasCoordinates.height\r\n    ) {\r\n      pageY =\r\n        canvasCoordinates.y + canvasCoordinates.height - figure.height - 1;\r\n    }\r\n    let border = figure.border;\r\n    if (selectedFigure) {\r\n      border =\r\n        dataFigure.id === selectedFigure.id ? \"3px solid grey\" : figure.border;\r\n    }\r\n    return {\r\n      width: figure.width + \"px\",\r\n      height: figure.height + \"px\",\r\n      border: border,\r\n      backgroundColor: figure.color,\r\n      borderRadius: figure.borderRadius,\r\n      left: pageX,\r\n      top: pageY,\r\n      position: \"absolute\",\r\n      zIndex: zIndex,\r\n      outline: \"none\",\r\n    };\r\n  };\r\n\r\n  const dragStartHandler = (e, typeFigure, idFigure, figure) => {\r\n    e.dataTransfer.setData(\"type\", typeFigure);\r\n    e.dataTransfer.setData(\"figure\", figure);\r\n    if (idFigure !== undefined) {\r\n      e.dataTransfer.setData(\"id\", idFigure);\r\n      e.target.style.border = \"3px solid grey\";\r\n    }\r\n    setSelectedFigure(figure);\r\n  };\r\n\r\n  const dragOverHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const dragLeaveHandler = (e) => {\r\n    console.log(\"leave\");\r\n    deleteFigure(e);\r\n  };\r\n\r\n  const dragDropHandler = (e) => {\r\n    const type = e.dataTransfer.getData(\"type\");\r\n    const figure = figuresList[type];\r\n    let pageX = e.pageX;\r\n    let pageY = e.pageY;\r\n\r\n    const dataFigure = {\r\n      id: idFigure,\r\n      pageX: pageX - figure.width / 3,\r\n      pageY: pageY - figure.height / 3,\r\n      type: type,\r\n      zIndex: zIndex,\r\n    };\r\n    if (selectedFigure) {\r\n      figures.forEach((item, index) => {\r\n        if (item.id === selectedFigure.id) {\r\n          figures.splice(index, 1);\r\n        }\r\n      });\r\n    }\r\n    setFigures([...figures, dataFigure]);\r\n    localStorage.setItem(\"figures\", JSON.stringify(figures));\r\n    setIdFigure(idFigure + 1);\r\n    localStorage.setItem(\"idFigure\", JSON.stringify(idFigure));\r\n    setZIndex(zIndex + 1);\r\n    localStorage.setItem(\"zIndex\", JSON.stringify(zIndex));\r\n    setSelectedFigure(null);\r\n  };\r\n\r\n  const clickHandler = (e, figure) => {\r\n    e.target.style.zIndex = zIndex;\r\n    figures.forEach((item) => {\r\n      if (item === figure) {\r\n        item.zIndex = zIndex;\r\n      }\r\n    });\r\n    setZIndex(zIndex + 1);\r\n    localStorage.setItem(\"zIndex\", JSON.stringify(zIndex));\r\n    setSelectedFigure(figure);\r\n  };\r\n\r\n  const deleteFigure = useCallback(\r\n    (event) => {\r\n      if (selectedFigure) {\r\n        const idSelectedFigure = selectedFigure.id;\r\n        if (event.keyCode === 46 || event.type === \"dragleave\") {\r\n          setFigures(\r\n            figures.filter((figure) => figure.id !== idSelectedFigure)\r\n          );\r\n          localStorage.setItem(\"figures\", JSON.stringify(figures));\r\n        }\r\n      }\r\n    },\r\n    [selectedFigure, figures]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"canvas_container\">\r\n        <div className=\"canvas_header\">Canvas</div>\r\n\r\n        <div\r\n          className=\"canvas\"\r\n          ref={ref}\r\n          onDragOver={(e) => dragOverHandler(e)}\r\n          onDrop={(e) => dragDropHandler(e)}\r\n          onDragLeave={(e) => dragLeaveHandler(e)}\r\n        ></div>\r\n      </div>\r\n      {figures.map((figure, index) => {\r\n        return (\r\n          <div\r\n            className=\"figure\"\r\n            onDragOver={(e) => dragOverHandler(e)}\r\n            onDrop={(e) => dragDropHandler(e)}\r\n            key={index}\r\n            style={getStyleForFigure(figure, index)}\r\n            onDragStart={(e) =>\r\n              dragStartHandler(e, figure.type, figure.id, figure)\r\n            }\r\n            onClick={(e) => clickHandler(e, figure)}\r\n            onKeyDown={(e) => deleteFigure(e)}\r\n            tabIndex=\"0\"\r\n            draggable\r\n          ></div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\figuresField\\FiguresField.js",[],"C:\\Users\\User\\Desktop\\projects\\drag-and-drop\\src\\components\\importExportFile\\ImportExport.js",[],{"ruleId":"29","severity":1,"message":"30","line":36,"column":6,"nodeType":"31","endLine":36,"endColumn":8,"suggestions":"32"},{"ruleId":"29","severity":1,"message":"33","line":153,"column":5,"nodeType":"31","endLine":153,"endColumn":30,"suggestions":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFigures'. Either include it or remove the dependency array.","ArrayExpression",["35"],"React Hook useCallback has a missing dependency: 'setFigures'. Either include it or remove the dependency array.",["36"],{"desc":"37","fix":"38"},{"desc":"39","fix":"40"},"Update the dependencies array to be: [setFigures]",{"range":"41","text":"42"},"Update the dependencies array to be: [selectedFigure, setFigures, figures]",{"range":"43","text":"44"},[1116,1118],"[setFigures]",[4628,4653],"[selectedFigure, setFigures, figures]"]